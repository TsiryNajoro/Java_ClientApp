package client;

import models.Etudiant;
import network.ClientSocket;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.io.File;
import network.XMLManager;

public class ClientFrame extends javax.swing.JFrame {

    private final JTextField txtNum;
    private final JTextField txtNom;
    private final JTextField txtAdresse;
    private final JTextField txtBourse;
    private final JButton btnEnvoyer;
    private final JButton btnModifier;
    private final JButton btnSupprimer;
    private final JTable table;
    private final JLabel lblConnexion;
    private final DefaultTableModel model;
    private final ClientSocket clientSocket;
    
    private final String host = "localhost";
    private final Integer port = 12345;
    
    
    // Creates new form ClientFrame
    public ClientFrame() {
        setTitle("Client Étudiant");
        setSize(600, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new BorderLayout());
        

        // Panel Formulaire
        JPanel panelForm = new JPanel(new GridLayout(5, 2, 5, 5));
        panelForm.setBorder(BorderFactory.createTitledBorder("Saisie Étudiant"));

        txtNum = new JTextField();
        txtNom = new JTextField();
        txtAdresse = new JTextField();
        txtBourse = new JTextField();

        panelForm.add(new JLabel("Numéro Étudiant:"));
        panelForm.add(txtNum);
        panelForm.add(new JLabel("Nom:"));
        panelForm.add(txtNom);
        panelForm.add(new JLabel("Adresse:"));
        panelForm.add(txtAdresse);
        panelForm.add(new JLabel("Bourse:"));
        panelForm.add(txtBourse);

        btnEnvoyer = new JButton("Envoyer");
        btnModifier = new JButton("Modifier");
        btnSupprimer = new JButton("Supprimer"); /*jButton*/

        panelForm.add(btnEnvoyer);
        panelForm.add(btnModifier);
        panelForm.add(btnSupprimer);

        // Tableau
        model = new DefaultTableModel(new String[]{"Numéro", "Nom", "Adresse", "Bourse"}, 0);
        table = new JTable(model);
        JScrollPane scrollPane = new JScrollPane(table);

        // Barre d'état (indicateur réseau)
        JPanel panelStatus = new JPanel(new FlowLayout(FlowLayout.LEFT));
        lblConnexion = new JLabel("Statut : Hors ligne");
        lblConnexion.setForeground(Color.RED);
        panelStatus.add(lblConnexion);
        clientSocket = new ClientSocket(host, port, lblConnexion); // Assurez-vous que lblConnexion est correctement défini

        add(panelForm, BorderLayout.NORTH);
        add(scrollPane, BorderLayout.CENTER);
        add(panelStatus, BorderLayout.SOUTH);

        // Initialisation du ClientSocket avec connexion au serveur
        NetworkChecker.startConnectionChecker(host, port, lblConnexion, clientSocket);

        btnEnvoyer.addActionListener((ActionEvent e) -> {
            envoyerDonnees();
        });
        setVisible(true);
    }

private void envoyerDonnees() {
    // Récupérer les données du formulaire
    File file = new File("pending_student.xml");
    String num = txtNum.getText();
    String nom = txtNom.getText();
    String adresse = txtAdresse.getText();
    double bourse = Double.parseDouble(txtBourse.getText());

    // Créer un nouvel objet Etudiant avec les données
    Etudiant etudiant = new Etudiant(num, nom, adresse, bourse);

    // Sauvegarder l'étudiant dans le fichier XML
    XMLManager.sauvegarderEtudiant(etudiant);

    // Vérifier la connexion avant d'envoyer
    if (NetworkChecker.isNetworkAvailable(host, port)) {
        if (clientSocket != null) {
            clientSocket.envoyerFichierXML("ajout");
            clientSocket.supprimerElementEnvoye(file);
            JOptionPane.showMessageDialog(null, 
            "Données envoyées au serveur avec succès", 
            "Ajout éfféctué", 
            JOptionPane.INFORMATION_MESSAGE);  
            
        } else {
            System.out.println("Erreur : ClientSocket n'est pas initialisé.");
        }
    } else {
        JOptionPane.showMessageDialog(null, 
        "Connexion indisponible : l'envoi sera effectué une fois la connexion rétablie.", 
        "Erreur de connexion", 
        JOptionPane.WARNING_MESSAGE);    
    }

    // Ajouter l'étudiant à la table pour l'affichage
    model.addRow(new Object[]{num, nom, adresse, bourse});
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ClientFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
